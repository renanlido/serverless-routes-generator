{"version":3,"sources":["../bin/cli.ts"],"sourcesContent":["import { exec } from 'child_process';\nimport fs from 'fs';\nimport path from 'path';\nimport { Command } from 'commander';\n\nconst program = new Command();\n\nprogram\n  .name('serverless-routes-generator')\n  .description('Simplify route creation for Serverless applications')\n  .version('1.0.0');\n\nprogram\n  .command('generate')\n  .description('Generate serverless routes')\n  .action(() => {\n    const scriptPath = path.resolve(__dirname, './index.js')\n\n    exec(`npx tsx ${scriptPath}`, (error, stdout, stderr) => {\n      if (error) {\n        console.error(`Erro ao executar o comando: ${error.message}`);\n        process.exit(1);\n      }\n      if (stderr) {\n        console.error(`Stderr: ${stderr}`);\n        process.exit(1);\n      }\n      console.log(stdout);\n    });\n  });\n\n  program\n  .command('init')\n  .description('Cria um arquivo de configuração padrão no diretório raiz')\n  .action(() => {\n    const configContent = `module.exports = {\n  pathPattern: \"modules/**/handler.ts\",\n  projectRoot: \"example/src\",\n  generatedFileName: \"serverless-route\",\n};`;\n\n    const configFileName = 'serverless-route.config.js';\n\n    const configFilePath = path.resolve(process.cwd(), configFileName);\n\n    if (fs.existsSync(configFilePath)) {\n      console.error(`O arquivo \"${configFileName}\" já existe no diretório raiz.`);\n      process.exit(1);\n    }\n\n    fs.writeFile(configFilePath, configContent, 'utf8', (err) => {\n      if (err) {\n        console.error(`Erro ao criar o arquivo de configuração: ${err.message}`);\n        process.exit(1);\n      }\n      console.log(`Arquivo de configuração \"${configFileName}\" criado com sucesso no diretório raiz.`);\n    });\n  });\n\n\nprogram.parse(process.argv);\n\n// If no arguments are provided, display help\nif (!process.argv.slice(2).length) {\n  program.outputHelp();\n}"],"mappings":";;;AAAA,SAASA,YAAY;AACrB,OAAOC,QAAQ;AACf,OAAOC,UAAU;AACjB,SAASC,eAAe;AAExB,IAAMC,UAAU,IAAID,QAAAA;AAEpBC,QACGC,KAAK,6BAAA,EACLC,YAAY,qDAAA,EACZC,QAAQ,OAAA;AAEXH,QACGI,QAAQ,UAAA,EACRF,YAAY,4BAAA,EACZG,OAAO,MAAA;AACN,QAAMC,aAAaR,KAAKS,QAAQC,WAAW,YAAA;AAE3CZ,OAAK,WAAWU,UAAAA,IAAc,CAACG,OAAOC,QAAQC,WAAAA;AAC5C,QAAIF,OAAO;AACTG,cAAQH,MAAM,+BAA+BA,MAAMI,OAAO,EAAE;AAC5DC,cAAQC,KAAK,CAAA;IACf;AACA,QAAIJ,QAAQ;AACVC,cAAQH,MAAM,WAAWE,MAAAA,EAAQ;AACjCG,cAAQC,KAAK,CAAA;IACf;AACAH,YAAQI,IAAIN,MAAAA;EACd,CAAA;AACF,CAAA;AAEAV,QACCI,QAAQ,MAAA,EACRF,YAAY,sEAAA,EACZG,OAAO,MAAA;AACN,QAAMY,gBAAgB;;;;;AAMtB,QAAMC,iBAAiB;AAEvB,QAAMC,iBAAiBrB,KAAKS,QAAQO,QAAQM,IAAG,GAAIF,cAAAA;AAEnD,MAAIrB,GAAGwB,WAAWF,cAAAA,GAAiB;AACjCP,YAAQH,MAAM,cAAcS,cAAAA,sCAA8C;AAC1EJ,YAAQC,KAAK,CAAA;EACf;AAEAlB,KAAGyB,UAAUH,gBAAgBF,eAAe,QAAQ,CAACM,QAAAA;AACnD,QAAIA,KAAK;AACPX,cAAQH,MAAM,kDAA4Cc,IAAIV,OAAO,EAAE;AACvEC,cAAQC,KAAK,CAAA;IACf;AACAH,YAAQI,IAAI,kCAA4BE,cAAAA,4CAAuD;EACjG,CAAA;AACF,CAAA;AAGFlB,QAAQwB,MAAMV,QAAQW,IAAI;AAG1B,IAAI,CAACX,QAAQW,KAAKC,MAAM,CAAA,EAAGC,QAAQ;AACjC3B,UAAQ4B,WAAU;AACpB;","names":["exec","fs","path","Command","program","name","description","version","command","action","scriptPath","resolve","__dirname","error","stdout","stderr","console","message","process","exit","log","configContent","configFileName","configFilePath","cwd","existsSync","writeFile","err","parse","argv","slice","length","outputHelp"]}